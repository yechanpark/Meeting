<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.meeting.mapper.replyMapper">

	<!-- 해당 게시물의 모든 댓글을 groupId, seq 오름차순으로 정렬하여 읽어옴 -->
	<select id="getRepliesByBoardNo" resultType="ReplyVO">
		SELECT *
		FROM reply
		WHERE boardno = #{boardno}
		ORDER BY groupId, seq
	</select>

	<!-- 댓글 등록, 인자로 넘어온 ReplyVO객체에 'replyno'필드에 해당하는 값을 바인딩 -->
	<insert id="replyRegister" parameterType="ReplyVO" useGeneratedKeys="true" keyProperty="replyno">
		INSERT INTO reply
		VALUES(#{replyno}, #{boardno}, #{username}, #{content}, #{replydate},
		#{parentno}, #{profileimage}, #{seq}, #{depth}, #{groupId})
	</insert>

	<!-- 로그인한 유저가 1차 댓글을 달았는지 -->
	<select id="isExistParentReply" resultType="ReplyVO"
		parameterType="ReplyVO">
		SELECT replyno
		FROM reply
		WHERE boardno = #{boardno} AND
		username = #{username} AND
		parentno = #{parentno}
	</select>

	<!-- 부모 replyno를 기준으로 값을 1개 가져옴 -->
	<select id="getReplyByParentno" resultType="ReplyVO" parameterType="ReplyVO">
		SELECT *
		FROM reply
		WHERE replyno = #{parentno}
	</select>

	<!-- 게시물에 있는 1차 댓글 중 가장 Seq가 높은 것을 찾음
	<select id="getMaxSeqByBoardNo" resultType="Integer"
		parameterType="ReplyVO">
		SELECT IFNULL(MAX(seq),0)
		FROM reply
		WHERE boardno = #{boardno}
	</select> -->

	<!-- 새로운 댓글이 그룹 내에서 맨 마지막으로 들어가야 하는 경우 -->
	<!-- group에서 가장 높은 Seq값을  리턴 -->
	<select id="getLastSeqInGroup" resultType="Integer"
		parameterType="Integer">
		SELECT IFNULL(MAX(seq),0)
		FROM reply
		WHERE groupId = #{groupId}
	</select>
	
	<!-- 새로운 댓글이 그룹 내에서 중간에 끼어 들어가는 경우 -->
	<!-- 부모 댓글을 기준으로 groupid가 같고, seq값이 높고 depth가 같거나 큰 것들 중 seq의 최소 값을 구함 -->
	<!-- 즉, 새로운 댓글의 Seq값을 계산 -->
	<select id="calcSeq" resultType="Integer" parameterType="ReplyVO">
		SELECT IFNULL(MIN(seq),0)
		FROM reply
		WHERE groupId = #{groupId} AND 
		seq > #{seq} AND
		#{depth} >= depth
	</select>

	<!-- 새로운 댓글이 그룹 내에서 중간에 끼어 들어가는 경우 -->
	<!-- 기존 댓글의 Seq값이 새로운 댓글의 Seq값과 같거나 큰 경우를 모두 +1 -->
	<update id="updateOtherSeqAfterAdded" parameterType="ReplyVO">
		UPDATE reply
		SET seq = seq + 1
		WHERE groupId = #{groupId}
		AND seq >= #{seq}
	</update>

	<!-- id_generator에서 값 증가 후 select, 이 값을 groupid로 사용 -->
	<update id="getGroupId">
		UPDATE id_generator
		SET seq_currval = seq_currval+1
		<selectKey keyProperty="groupId" resultType="int" order="AFTER">
			SELECT seq_currval
			FROM id_generator
		</selectKey>
	</update>

	<!-- 댓글id값으로  하나 가져오기 -->
	<select id="getReplyById" resultType="ReplyVO">
		SELECT *
		FROM reply
		WHERE replyno = #{replyno}
	</select>
	
	<!-- 특정 댓글 삭제 -->
	<delete id="deleteReplyByReplyNo">
		DELETE
		FROM reply
		WHERE replyno = #{replyno}
	</delete>
	
	<!-- 특정 댓글을 부모로 하는 댓글 전부 삭제 -->
	<delete id="deleteReplyByParentReplyNo">
		DELETE
		FROM reply
		WHERE parentno = #{parentno}
	</delete>

	<!-- 특정 댓글과 그 자식 댓글 삭제 후 나머지 댓글들에 대한 seq 세팅, 작업중 -->
	<update id="updateOtherSeqAfterDeleted" parameterType="ReplyVO">
		UPDATE reply
		SET seq = seq - #{sumOfDeletedReplies}
		WHERE groupId = #{groupId}
		AND seq >= #{seq}
	</update>
	
	<!-- 댓글 수정 -->
	<update id="updateReply" parameterType="ReplyVO">
		UPDATE reply
		SET content = #{content}
		WHERE replyno = #{replyno}
	</update>

</mapper>